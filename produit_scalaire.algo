PROCEDURE dot_product(v1,v2:ARRAY_OF FLOAT,var ps:FLOAT)
VAR
    i:INTEGER;
BEGIN
    FOR i FROM 0 TO v1.length-1 DO
        ps:=ps+(v1[i]*v2[i]);
    END_FOR
END


ALGORITHM Dot_product_procedure
VAR
    i,j,n,k:INTEGER;
    pros:FLOAT:=0;
    vecteur: ARRAY_OF FLOAT[50][50];
BEGIN
    REPEAT
        Write ("Enter le nbr paire des vecteurs: \n")
        Read (n);
    UNTIL (n>1 AND n<= 50 AND n % 2 =0)
    REPEAT
        Write ("Enter le demention des vecteurs: \n")
        Read (k);
    UNTIL (k>1 AND k<= 50);
    FOR i FROM 0 TO n-1 STEP 1 DO
        FOR j FROM 0 TO k-1 STEP 1 DO
            Read(vecteur[i][j]);
        END_FOR
    END_FOR
    FOR i FROM 0 TO n-1 STEP 2  DO
        dot_product(vecteur[i],vecteur[i+1],pros);
        IF (pros=0) THEN
            write("les deux vecteurs son orthogaunal");
        ELSE
            write("les deux vecteurs ne son pas orthogaunal");
        END_IF
    END_FOR
END






FUNCTION dot_product(v1,v2:ARRAY_OF FLOAT) : FLOAT
VAR
    i:INTEGER;
    ps:FLOAT:=0;
BEGIN
    FOR i FROM 0 TO v1.length-1 DO
        ps:=ps+(v1[i]*v2[i]);
    END_FOR
    RETURN ps ;
END

ALGORITHM Dot_product_fonction
VAR
    i,j,n,k:INTEGER;
    pros:FLOAT:=0;
    vecteur: ARRAY_OF FLOAT[50][50];
BEGIN
    REPEAT
        Write ("Enter le nbr paire des vecteurs: \n")
        Read (n);
    UNTIL (n>1 AND n<= 50 AND n % 2 =0)
    REPEAT
        Write ("Enter le demention des vecteurs: \n")
            Read (k);
    UNTIL (k>1 AND k<= 50);
    FOR i FROM 0 TO n-1 STEP 1 DO
        FOR j FROM 0 TO k-1 STEP 1 DO
            Read(vecteur[i][j]);
        END_FOR
    END_FOR
    FOR i FROM 0 TO n-1 STEP 2  DO
        pros:=dot_product(vecteur[i],vecteur[i+1]);
        IF (pros=0) THEN
            write("les deux vecteurs son orthogaunal");
        ELSE
            write("les deux vecteurs ne son pas orthogaunal");
        END_IF
    END_FOR
END